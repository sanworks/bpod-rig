[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "bpod-rig"
dynamic = ["version"]
description = "Python software suite for Bpod, built around int-brain-lab's bpod-core"
readme = "README.md"
license = "MIT"
authors = [
	{name = "Joshua Sanders", email = "josh@sanworks.io"},
	{name = "Austin Pauley", email = "pauley@psy.fsu.edu"},
	{name = "Florian Rau", email = "bimac@users.noreply.github.com" },
	{name = "Steven Smith", email = "steven@stevenlsmith.com"}
]
requires-python = ">=3.10"
dependences = [
	"bpod-core",
	"bpod-gui"
]

[project.urls]
Changelog = "https://github.com/sanworks/bpod-rig/blob/main/CHANGELOG.md"
# Documentation = "https://int-brain-lab.github.io/bpod-core/"
Homepage = "https://github.com/sanworks/bpod-rig"
Issues = "https://github.com/sanworks/bpod-rig/issues"
Repository = "https://github.com/sanworks/bpod-rig.git"

[tool.setuptools.dynamic]
version = {attr="bpod_rig.__version__"}



[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".egg-info",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "E",
    "F",
    "YTT",
    "S",
    "B",
    "A",
    "COM",
    "C4",
    "FA",
    "ICN",
    "INP",
    "PIE",
    "PYI",
    "RET",
    "SIM",
    "ARG",
    "NPY",
    "PD",
    "N",
    "PERF",
]
ignore = [
	"COM812",  # Missing trailing comma
	"D100",    # Missing docstring in public module
  	"D101",    # Missing docstring in public class
  	"D102",    # Missing docstring in puclic method
	"D103",    # Missing docstring in public function
	"D104",    # Missing docstring in public package
	"D105",    # Missing docstring in magic method
	"D401",    # First line of docstring should be in imperative mood
	"PLR0912", # Too many branches
  	"PLR0915", # Too many statements
  	"PLR2004", # Magic value used in comparison, consider replacing with a constant variable]
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = []
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"